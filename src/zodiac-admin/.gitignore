# Zodiac App Updater - Administrador Web

Administrador web construido con Vue 3 para gestionar la distribuci√≥n de versiones de la aplicaci√≥n m√≥vil Zodiac App mediante HTTP.

## üöÄ Caracter√≠sticas

- **Dashboard**: Estad√≠sticas generales y informaci√≥n de la √∫ltima versi√≥n
- **Gesti√≥n de Versiones**: Lista, descarga y eliminaci√≥n de versiones APK
- **Subida de APK**: Formulario completo para subir nuevas versiones con drag & drop
- **Estado de API**: Monitoreo en tiempo real del estado de la API
- **Dise√±o Responsive**: Funciona perfectamente en m√≥viles y escritorio

## üõ†Ô∏è Tecnolog√≠as Utilizadas

- **Vue 3** - Framework progresivo de JavaScript
- **Vite** - Build tool r√°pido para desarrollo
- **Axios** - Cliente HTTP para llamadas a la API
- **CSS3** - Estilos modernos con gradientes y glassmorphism
- **Font Awesome** - Iconograf√≠a

## üì¶ Instalaci√≥n

### Prerrequisitos

- Node.js 16+ 
- npm o yarn

### Pasos de instalaci√≥n

1. **Clona el repositorio**
   ```bash
   git clone <tu-repositorio>
   cd zodiac-admin
   ```

2. **Instala las dependencias**
   ```bash
   npm install
   ```

3. **Configura las variables de entorno**
   ```bash
   cp .env.example .env
   ```
   Edita el archivo `.env` con tu URL de API:
   ```env
   VITE_API_URL=http://localhost:3000
   ```

4. **Ejecuta en modo desarrollo**
   ```bash
   npm run dev
   ```

5. **Construye para producci√≥n**
   ```bash
   npm run build
   ```

## üèóÔ∏è Estructura del Proyecto

```
zodiac-admin/
‚îú‚îÄ‚îÄ public/
‚îú‚îÄ‚îÄ src/
‚îÇ   ‚îú‚îÄ‚îÄ assets/
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ styles/
‚îÇ   ‚îÇ       ‚îî‚îÄ‚îÄ main.css              # Estilos globales
‚îÇ   ‚îú‚îÄ‚îÄ components/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ AlertMessage.vue          # Componente de alertas
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ AppHeader.vue             # Encabezado de la aplicaci√≥n
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ DashboardTab.vue          # Tab del dashboard
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ NavTabs.vue               # Navegaci√≥n por tabs
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ StatusCard.vue            # Tarjeta de estado de API
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ UploadTab.vue             # Tab de subida de APK
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ VersionsTab.vue           # Tab de gesti√≥n de versiones
‚îÇ   ‚îú‚îÄ‚îÄ services/
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ ApiService.js             # Servicio para llamadas a la API
‚îÇ   ‚îú‚îÄ‚îÄ utils/
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ formatters.js             # Utilidades de formato
‚îÇ   ‚îú‚îÄ‚îÄ App.vue                       # Componente principal
‚îÇ   ‚îî‚îÄ‚îÄ main.js                       # Punto de entrada
‚îú‚îÄ‚îÄ .env.example                      # Variables de entorno de ejemplo
‚îú‚îÄ‚îÄ index.html                        # HTML principal
‚îú‚îÄ‚îÄ package.json                      # Dependencias y scripts
‚îú‚îÄ‚îÄ vite.config.js                    # Configuraci√≥n de Vite
‚îî‚îÄ‚îÄ README.md                         # Este archivo
```

## üîå Integraci√≥n con la API

El administrador consume los siguientes endpoints de tu REST API:

- `GET /api/health` - Estado de la API
- `GET /api/versions` - Lista de todas las versiones
- `GET /api/version/latest` - √öltima versi√≥n disponible
- `POST /api/upload` - Subir nueva versi√≥n APK
- `DELETE /api/version/:version` - Eliminar versi√≥n
- `GET /api/download/:version` - Descargar APK

## üéØ Funcionalidades Principales

### Dashboard
- N√∫mero total de versiones
- Informaci√≥n de la √∫ltima versi√≥n
- Tama√±o total de todos los APK
- Acceso directo a descarga

### Gesti√≥n de Versiones
- Lista completa de versiones con metadatos
- Bot√≥n de descarga para cada versi√≥n
- Eliminaci√≥n segura con confirmaci√≥n
- Actualizaci√≥n manual de la lista

### Subida de APK
- Formulario con validaci√≥n de formato semver
- Drag & Drop para archivos APK
- Barra de progreso durante la subida
- Validaci√≥n de tama√±o (m√°x. 100MB)
- Campos para metadatos de la versi√≥n

## üöÄ Despliegue en Vercel

1. **Sube el c√≥digo a GitHub**

2. **Conecta con Vercel**
   - Ve a [vercel.com](https://vercel.com)
   - Importa tu repositorio de GitHub

3. **Configura variables de entorno**
   - En el dashboard de Vercel, ve a Settings > Environment Variables
   - Agrega: `VITE_API_URL` con el valor de tu API en producci√≥n

4. **Deploy autom√°tico**
   - Vercel construir√° y desplegar√° autom√°ticamente
   - Cada push a la rama principal activar√° un nuevo deploy

## üîß Configuraci√≥n de Desarrollo

### Scripts disponibles

```bash
npm run dev      # Servidor de desarrollo
npm run build    # Construir para producci√≥n
npm run preview  # Vista previa de la build de producci√≥n
npm run lint     # Linter de c√≥digo
```

### Variables de entorno

- `VITE_API_URL`: URL base de tu API REST (requerida)

## üì± Compatibilidad

- **Navegadores**: Chrome 85+, Firefox 80+, Safari 14+, Edge 85+
- **Dispositivos**: Responsive design para m√≥viles y tablets
- **Resoluciones**: Optimizado desde 320px hasta 4K

## ü§ù Integraci√≥n con la API Node.js

Este administrador est√° dise√±ado para trabajar con la REST API de Node.js/Express que maneja:

- Almacenamiento de APK por versiones en carpetas organizadas
- Base de datos MongoDB con esquema de versiones
- Validaci√≥n semver y metadatos de versiones
- Rate limiting y seguridad con Helmet
- Subida de archivos con Multer

## üìÑ Licencia

Este proyecto es parte del sistema Zodiac App Updater para distribuci√≥n privada de aplicaciones m√≥viles Android.